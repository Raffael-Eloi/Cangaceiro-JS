{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacoesView","Mensagem","MensagemView","NegociacaoService","getNegociacaoDao","DataInvalidaException","Negociacao","Bind","DateConverter","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","console","log","stack","menssage","value","focus","paraData","parseInt","apaga","apagaTodos","esvazia","importaNegociacoes","obtemNegociacoesDoPeriodo","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals"],"mappings":"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","sourcesContent":["import { Negociacoes } from '../domain/negociacao/Negociacoes.js';\r\nimport { NegociacoesView } from '../ui/views/NegociacoesView.js';\r\nimport { Mensagem } from '../ui/models/Mensagem.js';\r\nimport { MensagemView } from '../ui/views/MensagemView.js';\r\nimport { NegociacaoService } from '../domain/negociacao/NegociacaoService.js';\r\nimport { getNegociacaoDao } from '../util/DaoFactory.js';\r\nimport { DataInvalidaException } from '../ui/converters/DataInvalidaException.js';\r\nimport { Negociacao } from '../domain/negociacao/Negociacao.js';\r\nimport { Bind } from '../util/Bind.js';\r\nimport { DateConverter } from '../ui/converters/DateConverter.js';\r\n\r\nexport class NegociacaoController {\r\n  constructor() {\r\n    const $ = document.querySelector.bind(document); // Precisa do bind porque o this da função tem que referenciar o document\r\n\r\n    this._inputData = $('#data');\r\n    this._inputQuantidade = $('#quantidade');\r\n    this._inputValor = $('#valor');\r\n    \r\n    // const self = this;\r\n\r\n    // this._negociacoes = new Proxy(new Negociacoes(), {\r\n    //   get(target, prop, receiver) {\r\n    //     if (typeof(target[prop]) == typeof(Function) && ['adiciona', 'esvazia'].includes(prop)) {\r\n    //       return function() {\r\n    //         console.log(`\"${prop}\" disparou a armadilha`);\r\n    //         target[prop].apply(target, arguments);\r\n    //       }\r\n    //       self._negociacoesView.update(target);\r\n    //     }\r\n\r\n    //     else {\r\n    //       return target[prop];\r\n    //     }\r\n    //   }\r\n    // })\r\n\r\n    // this._negociacoes = ProxyFactory.create(\r\n    //   new Negociacoes(), \r\n    //   ['adiciona', 'esvazia'], \r\n    //   model => this._negociacoesView.update(model)\r\n    // );\r\n\r\n    this._negociacoes = new Bind(\r\n      new Negociacoes(),\r\n      new NegociacoesView('#negociacoes'),\r\n      'adiciona', 'esvazia'\r\n    );\r\n\r\n    this._mensagem = new Bind(\r\n      new Mensagem(),\r\n      new MensagemView('#mensagemView'),\r\n      'texto'\r\n    );\r\n\r\n    // this._negociacoesView = new NegociacoesView('#negociacoes');\r\n    // this._negociacoesView.update(this._negociacoes);\r\n\r\n    // this._mensagem = ProxyFactory.create(\r\n    //   new Mensagem(),\r\n    //   ['texto'],\r\n    //   model => this._mensagemView.update(model)\r\n    // );\r\n\r\n  //   this._mensagem = new Mensagem();\r\n\r\n  //   this._mensagemView = new MensagemView('#mensagemView');\r\n  //   this._mensagemView.update(this._mensagem);\r\n  \r\n    this._service = new NegociacaoService();\r\n\r\n    this._init();\r\n  }\r\n  \r\n  _init() {\r\n    getNegociacaoDao()\r\n    .then(\r\n      dao => dao.listaTodos()\r\n    )\r\n    .then(\r\n      negociacoes => negociacoes.forEach(\r\n        negociacao => this._negociacoes.adiciona(negociacao)\r\n      )\r\n    )\r\n    .catch(\r\n      err => this._mensagem.texto = err\r\n    );\r\n  }\r\n\r\n  adiciona(event) {\r\n    try {\r\n      event.preventDefault();\r\n      this._negociacoes.adiciona(this._criaNegociacao());\r\n\r\n      getNegociacaoDao()\r\n      .then(\r\n        dao => dao.adiciona(negociacao)\r\n      )\r\n      .then(() => {\r\n        // só tentará incluir na tabela se conseguiu antes incluir no banco\r\n        this._negociacoes.adiciona(negociacao);\r\n        this._mensagem.texto = \"Negociação adicionada com sucesso\"; \r\n        this._limpaFormulario();\r\n      })\r\n      .catch(\r\n        err => this._mensagem.texto = err\r\n      );\r\n\r\n      // this._negociacoesView.update(this._negociacoes);\r\n      // this._mensagemView.update(this._mensagem);\r\n\r\n    }\r\n    catch(err) {\r\n      console.log(err);\r\n      console.log(err.stack);\r\n\r\n      if (err instanceof DataInvalidaException) {\r\n        this._mensagem.texto = err.menssage;\r\n      }\r\n\r\n      else {\r\n        this._mensagem.texto = \"Um erro não esperado aconteceu. Entre em contato com o suporte\";\r\n      }\r\n    }\r\n  }\r\n\r\n  _limpaFormulario() {\r\n    this._inputData.value = '';\r\n    this._inputQuantidade.value = 1;\r\n    this._inputValor.value = 0.0;\r\n    this._inputData.focus();\r\n  }\r\n\r\n  _criaNegociacao() {\r\n    return new Negociacao(\r\n      DateConverter.paraData(this._inputData.value),\r\n      parseInt(this._inputQuantidade.value),\r\n      parseInt(this._inputValor.value)\r\n    );\r\n  }\r\n\r\n  apaga() {\r\n      getNegociacaoDao()\r\n      .then(\r\n        dao => dao.apagaTodos()\r\n      )\r\n      .then(() => {\r\n        this._negociacoes.esvazia();\r\n        this._mensagem.texto = \"Negociações apagadas com sucesso\"; \r\n        this._limpaFormulario();\r\n      })\r\n      .catch(\r\n        err => this._mensagem.texto = err\r\n      );\r\n\r\n\r\n\r\n    this._negociacoes.esvazia();\r\n    // this._negociacoesView.update(this._negociacoes);\r\n    this._mensagem.texto = 'Negociações foram apagadas com sucesso';\r\n    // this._mensagemView.update(this._mensagem);\r\n  }\r\n\r\n  importaNegociacoes() {\r\n    // this._service.obterNegociacoesDaSemana(\r\n    //   (err, negociacoes) => {\r\n    //     if (err) {\r\n    //       this._mensagem.texto = 'Não foi possível obter nas negociações da semana';\r\n    //       return;\r\n    //     }\r\n\r\n    //     negociacoes.forEach(\r\n    //       negociacao => this._negociacoes.adiciona(negociacao)\r\n    //     );\r\n\r\n    //     this._mensagem.texto = 'Negociações importadas com sucesso';\r\n    //   }\r\n    // );\r\n\r\n    // this._service.obterNegociacoesDaSemana()\r\n    //   .then(\r\n    //     negociacoes => {\r\n    //       negociacoes.forEach(\r\n    //         negociacao => this._negociacoes.adiciona(negociacao)\r\n    //       );\r\n    //       this._mensagem.texto = 'Negociações importadas com sucesso';\r\n    //     },\r\n\r\n    //     err => this._mensagem.texto = err\r\n    //   );\r\n\r\n      // const negociacoes = [];\r\n\r\n      // this._service\r\n      // .obterNegociacoesDaSemana()\r\n      // .then(semana => {\r\n      //   negociacoes.push(...semana);\r\n      //   return this._service.obterNegociacoesDaSemanaAnterior();\r\n      // })\r\n      // .then(anterior => {\r\n      //   negociacoes.push(...anterior);\r\n      //   negociacoes.forEach(\r\n      //     negociacao => this._negociacoes.adiciona(negociacao)\r\n      //   )\r\n      // .then(retrasada => {\r\n      //   negociacoes.push(...retrasada);\r\n      //   negociacoes.forEach(\r\n      //     negociacao => this._negociacoes.adiciona(negociacao)\r\n      //   );\r\n        \r\n      //   this._mensagem.texto = 'Negociações importadas com sucesso';\r\n      // })\r\n      // .catch(\r\n      //   err => this._mensagem.texto = err\r\n      // );\r\n      // })\r\n\r\n      // RECEBE UM ARRAY DE PROMISES\r\n      // Promise.all(\r\n      //   [\r\n      //     this._service.obterNegociacoesDaSemana(),\r\n      //     this._service.obterNegociacoesDaSemanaAnterior(),\r\n      //     this._service.obterNegociacoesDaSemanaRetrasada()\r\n      //   ]\r\n      // )\r\n      // .then( periodo => {\r\n      //   periodo = periodo.reduce(\r\n      //     (novoArray, item) => novoArray.concat(item, [])\r\n      //     .forEach(\r\n      //       negociacao => this._negociacoes.adiciona(negociacao)\r\n      //     )\r\n      //   )\r\n      //   this._mensagem.texto = 'Negociações importadas com sucesso';\r\n      // })\r\n      // .catch(\r\n      //   err => this._mensagem.texto = err\r\n      // );\r\n\r\n      this._service\r\n      .obtemNegociacoesDoPeriodo()\r\n      .then(\r\n        negociacoes => {\r\n          negociacoes.filter(\r\n            novaNegociacao => !this._negociacoes.paraArray().some(\r\n              negociacaoExistente => novaNegociacao.equals(negociacaoExistente)\r\n            )\r\n          ).forEach(\r\n            negociacao => this._negociacoes.adiciona(negociacao)\r\n          )\r\n          this._mensagem.texto = 'Negociações do período importadas com sucesso';\r\n        }\r\n      )\r\n      .catch(\r\n        err => this._mensagem.texto = err\r\n      );\r\n\r\n      // SOME / some() -> itera em cada elemento de uma lista. \r\n      // cont_ Assim que encontrar algum (some) elemento de acordo com alguma lógica que retorne true, \r\n      // cont_ parará imediatamente de iterar o array retornando true.\r\n      // cont_ Se nenhum elemento atender o critério de comparação, o array terá sido percorrido até o fim e o retorno de some será false.\r\n  }\r\n}\r\n"],"file":"NegociacaoController.js"}