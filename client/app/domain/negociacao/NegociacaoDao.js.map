{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","constructor","connection","_connection","_store","adiciona","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","apagaTodos","clear","listaTodos","negociacoes","cursor","openCursor","atual","result","value","_data","_quantidade","_valor","push","continue"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AAEA,OAAO,MAAMC,aAAN,CAAoB;AACzBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACtB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,MAAL,GAAc,aAAd;AACD;;AAEDC,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACnB,WAAO,IAAIC,OAAJ,CACL,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnB,YAAMC,OAAO,GAAG,KAAKP,WAAL,CACfQ,WADe,CACH,CAAC,KAAKP,MAAN,CADG,EACY,WADZ,EAEfQ,WAFe,CAEH,KAAKR,MAFF,EAGfS,GAHe,CAGXP,UAHW,CAAhB;;AAKAI,MAAAA,OAAO,CAACI,SAAR,GAAoBC,CAAC,IAAIP,OAAO,EAAhC;;AAEAE,MAAAA,OAAO,CAACM,OAAR,GAAkBD,CAAC,IAAI;AACrBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAX,QAAAA,MAAM,CAAC,sCAAD,CAAN;AACD,OAHD;AAQD,KAjBI,CAAP;AAmBD;;AAEDY,EAAAA,UAAU,GAAG;AACX,WAAO,IAAId,OAAJ,CACL,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnB,YAAMC,OAAO,GAAG,KAAKP,WAAL,CACfQ,WADe,CACH,CAAC,KAAKP,MAAN,CADG,EACY,WADZ,EAEfQ,WAFe,CAEH,KAAKR,MAFF,EAGfkB,KAHe,EAAhB;;AAKAZ,MAAAA,OAAO,CAACI,SAAR,GAAoBC,CAAC,IAAIP,OAAO,EAAhC;;AAEAE,MAAAA,OAAO,CAACM,OAAR,GAAkBD,CAAC,IAAI;AACrBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAX,QAAAA,MAAM,CAAC,wCAAD,CAAN;AACD,OAHD;AAID,KAbI,CAAP;AAeD;;AAEDc,EAAAA,UAAU,GAAG;AACX,WAAO,IAAIhB,OAAJ,CACL,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnB,YAAMe,WAAW,GAAG,EAApB;;AAEA,YAAMC,MAAM,GAAG,KAAKtB,WAAL,CACdQ,WADc,CACF,CAAC,KAAKP,MAAN,CADE,EACa,WADb,EAEdQ,WAFc,CAEF,KAAKR,MAFH,EAGdsB,UAHc,EAAf;;AAKAD,MAAAA,MAAM,CAACX,SAAP,GAAmBC,CAAC,IAAI;AACtB,cAAMY,KAAK,GAAGZ,CAAC,CAACI,MAAF,CAASS,MAAvB;;AACA,YAAID,KAAJ,EAAW;AACT,gBAAMrB,UAAU,GAAG,IAAIP,UAAJ,CACjB4B,KAAK,CAACE,KAAN,CAAYC,KADK,EAEjBH,KAAK,CAACE,KAAN,CAAYE,WAFK,EAGjBJ,KAAK,CAACE,KAAN,CAAYG,MAHK,CAAnB;AAKAR,UAAAA,WAAW,CAACS,IAAZ,CAAiB3B,UAAjB;AAEAqB,UAAAA,KAAK,CAACO,QAAN;AACD,SATD,MAWK;AACH;AACA1B,UAAAA,OAAO,CAACgB,WAAD,CAAP;AACD;AACF,OAjBD;;AAmBAC,MAAAA,MAAM,CAACT,OAAP,GAAiBD,CAAC,IAAI;AACpBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAX,QAAAA,MAAM,CAAC,wCAAD,CAAN;AACD,OAHD;AAID,KAhCI,CAAP;AAkCD;;AAjFwB","sourcesContent":["import { Negociacao } from './Negociacao.js';\r\n\r\nexport class NegociacaoDao {\r\n  constructor(connection) {\r\n    this._connection = connection;\r\n    this._store = 'negociacoes';\r\n  }\r\n\r\n  adiciona(negociacao) {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const request = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .add(negociacao);\r\n      \r\n        request.onsuccess = e => resolve();\r\n        \r\n        request.onerror = e => {\r\n          console.log(e.target.error);\r\n          reject('Não foi possível salvar a negociação');\r\n        }\r\n\r\n      \r\n      \r\n      \r\n      }\r\n    );\r\n  }\r\n\r\n  apagaTodos() {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const request = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .clear();\r\n\r\n        request.onsuccess = e => resolve();\r\n\r\n        request.onerror = e => {\r\n          console.log(e.target.error);\r\n          reject('Não foi possível apagar as negociações');\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  listaTodos() {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const negociacoes = [];\r\n\r\n        const cursor = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .openCursor();\r\n\r\n        cursor.onsuccess = e => {\r\n          const atual = e.target.result;\r\n          if (atual) {\r\n            const negociacao = new Negociacao(\r\n              atual.value._data,\r\n              atual.value._quantidade,\r\n              atual.value._valor\r\n            )\r\n            negociacoes.push(negociacao);\r\n\r\n            atual.continue();\r\n          }\r\n\r\n          else {\r\n            // resolvendo a promise com negociacoes\r\n            resolve(negociacoes);\r\n          }\r\n        }\r\n\r\n        cursor.onerror = e => {\r\n          console.log(e.target.error);\r\n          reject('Não foi possível listar as negociações');\r\n        }\r\n      }\r\n    );\r\n  }\r\n}"],"file":"NegociacaoDao.js"}